---
object_type: class
version: 1.0
object:
  attributes:
    description: Factory State Machines
    display_name: 
    name: VMProvision_VM
    type: 
    inherits: 
    visibility: 
    owner: 
  schema:
  - field:
      aetype: state
      name: CustomizeRequest
      display_name: 
      datatype: string
      priority: 1
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/CustomizeRequest#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Customizing Request')
      on_exit: update_provision_status(status => 'Customized Request')
      on_error: update_provision_status(status => 'Error Customizing Request')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: Run_Ansible_Demo
      display_name: 
      datatype: string
      priority: 2
      owner: 
      default_value: "/AutomationManagement/AnsibleTower/Operations/JobTemplate/AnsibleDemo"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Running Ansible Demo')
      on_exit: update_provision_status(status => 'Ansible Demo FAILED')
      on_error: update_provision_status(status => 'Ansible Demo SUCCESS')
      max_retries: '10'
      max_time: 
  - field:
      aetype: state
      name: Placement
      display_name: 
      datatype: string
      priority: 3
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/Placement/default#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Starting Placement')
      on_exit: update_provision_status(status => 'Finished Placement')
      on_error: update_provision_status(status => 'Error in Placement')
      max_retries: 
      max_time: 
  - field:
      aetype: state
      name: PreProvision
      display_name: 
      datatype: string
      priority: 4
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/PreProvision#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Applying PreProvision Customizations')
      on_exit: update_provision_status(status => 'Applied PreProvision Customizations')
      on_error: update_provision_status(status => 'Error Applying PreProvision Customizations')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: Naming
      display_name: 
      datatype: string
      priority: 5
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/Naming/set_vmname"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Generating Name')
      on_exit: update_provision_status(status => 'VM Name Generated and Assigned')
      on_error: update_provision_status(status => 'FAILED Generating VM Name')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: Provision
      display_name: 
      datatype: string
      priority: 6
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/Provision"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Creating VM')
      on_exit: update_provision_status(status => 'Creating VM')
      on_error: update_provision_status(status => 'Error Creating VM')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: CheckProvisioned
      display_name: 
      datatype: string
      priority: 7
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/CheckProvisioned"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: 
      on_exit: update_provision_status(status => 'Creating VM')
      on_error: update_provision_status(status => 'Error Creating VM')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: PostProvision
      display_name: 
      datatype: string
      priority: 8
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/PostProvision#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Applying PostProvision Customizations')
      on_exit: update_provision_status(status => 'Applied PostProvision Customizations')
      on_error: update_provision_status(status => 'Error Applying PostProvision Customizations')
      max_retries: 
      max_time: 
  - field:
      aetype: state
      name: CheckVMName
      display_name: 
      datatype: string
      priority: 9
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/Naming/check_vmname"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Checking VM Name')
      on_exit: update_provision_status(status => 'VM Name Checked Succesfully')
      on_error: update_provision_status(status => 'FAILED on Checking VM NAme')
      max_retries: '5'
      max_time: 
  - field:
      aetype: state
      name: EmailOwner
      display_name: 
      datatype: string
      priority: 10
      owner: 
      default_value: "/System/Notification/Email/InfrastructureMiqProvisionComplete?event=vm_provisioned"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Emailing Owner')
      on_exit: update_provision_status(status => 'Emailed Owner')
      on_error: update_provision_status(status => 'Error Emailing Owner')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: Finished
      display_name: 
      datatype: string
      priority: 11
      owner: 
      default_value: "/System/CommonMethods/StateMachineMethods/vm_provision_finished"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: 
      on_exit: 
      on_error: 
      max_retries: '100'
      max_time: 
